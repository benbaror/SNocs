import os.path
import sys
from helper import *
#--------------------------------------
#           Environment
#--------------------------------------
Import( 'env', 'args' )        # Import the common environment
#--------------------------------------
#            PROJECT
#--------------------------------------
args['PROGFileName'] = PROGFileName = 'SnocsTemplateTest'
args['prj_env'] = env.Clone()          # Clone it so we don't make changes to the global one
args['prj_env'].Append(
    LIBPATH = [],#snocs dependencies can be managed via AddDependency function
    LIBS = [],#snocs dependencies can be managed via AddDependency function
    LINKFLAGS = [],
    CPPPATH = [os.path.join(args['SCONSCRIPT_PATH'],'include')],
    CPPDEFINES = ['SnocsTemplateExports'], #define for export functions from shared lib
    CCFLAGS = []
)
Default(PrefixSharedLibrary(args, PrefixSources(args, 'src', [
    'possible_templates_test.c'
])))

#--------------------------------------
#             TESTS
#--------------------------------------
args['PROGFileName'] = PROGFileName+"_test"
args['prj_env'] = env.Clone()          # Clone it so we don't make changes to the global one
args['prj_env'].Append(
    LIBPATH = [],#snocs dependencies can be managed via AddDependency function
    LIBS = [],#snocs dependencies can be managed via AddDependency function
    LINKFLAGS = [],
    CPPPATH = [os.path.join(args['SCONSCRIPT_PATH'],'include')],
    CPPDEFINES = ['SnocsTemplateExports'], #define for export functions from shared lib
    CCFLAGS = []
)
Default(PrefixTest(args, PrefixSources(args, 'tests', [
    'possible_templates_test_main.c'
])))
AddDependency(args,
    PROGFileName,           #dependency: just build shared lib
    args['SCONSCRIPT_PATH'] #path to the dependency PROGFileName
)